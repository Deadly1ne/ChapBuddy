name: Manga Bot Auto Run

on:
  schedule:
    - cron: '*/20 * * * *'
  workflow_dispatch:

jobs:
  run-manga-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT_TOKEN || github.token }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: sudo apt-get install -y libjpeg-dev zlib1g-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create config files
      run: |
        echo '${{ secrets.SETTINGS_JSON }}' | base64 --decode > settings.json
        echo '${{ secrets.CREDENTIALS_JSON }}' | base64 --decode > credentials.json
        echo '${{ secrets.TOKEN_JSON }}' | base64 --decode > token.json

    - name: Initialize state
      run: python -c "import json; open('state.json','w').write(json.dumps({}))"
      if: !(exists('state.json'))

    - name: Run manga bot
      run: python bot.py
      env:
        SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}

    - name: Commit and push changes
      if: always()
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add state.json token.json
        git diff --quiet && git diff --staged --quiet || (
          git commit -m "Bot state update: $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin main
        )

    - name: Archive logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: manga-bot-logs
        path: |
          manga_bot.log
          state.json
        retention-days: 3
